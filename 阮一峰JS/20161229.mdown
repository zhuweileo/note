javascript是一种脚本语言
脚本语言的特点是不能编写操作系统
但是它可以用来编写控制其它大型应用程序的脚本
脚本也就是编写插件的语言
JS最常见的宿主环境
- 浏览器
- 服务器

1992年第一款浏览器才诞生？

表达式（expression）
语句（statement）
区别：语句和表达式的区别在于，前者主要为了进行某种操作，一般情况下不需要返回值；后者则是为了得到返回值，一定会返回一个值。

不写var创建变量会创建全局变量；

JS的变量类型是动态的，所有类型的变量都用var声明，不存在int、float……

使用var重新声明一个已经存在的变量是无效的
```
var x = 1;
var x;
x//1
```
第二次声明是无效的


## 变量提升
JS会先通读一遍代码，把所有声明的变量都提升到代码头部，然后再一句一句去读代码。

变量提升只对使用var命令声明的变量有效，其它方式声明的变量不会被提升，如下
```
console.log(b);
b=2;
```
是会报错的，因为b不是通过var声明的，所以没有被提升。

## 标识符
JS对大小写敏感

## 区块
js区块中生命的变量，在区块外面同样有效；
switch后面的表达式和case后面的表达式比较时采用的是严格比较===

标签label

## 数值
JS中所有数都以64位浮点数形式存储

## 数的表示方法
*科学计数法   2e10=2*10^10  e代表10的多少次幂

## 数的进制
有前导0的数值会被视为八进制，但是如果前导0后面有数字8和9，则该数值被视为十进制。

NaN是JavaScript的特殊值，表示“非数字”（Not a Number），主要出现在将字符串解析成数字出错的场合。

```
5+'1'  //会把5转换成字符串，结果是"51"

5-'1'  //会把"1"转换成数字，结果是4
```
## 特殊数值
NaN、Infinity、正负0
涉及的方法
isNaN()用于判断一个数是否为NaN
isFinity()用于判断一个数是否为正常值，而不是Infinity

## 数值有关的全局方法
parseInt()用于将字符串转换成整数
parseInt()不识别类似于"0o22"的八进制数，但是识别"0x22"的十六进制表示方法
parseInt()可以接收第二个参数，代表要转换字符串的进制数，第二个参数的范围是2~36。
parseFloat()将一个字符串转为浮点数，可以识别科学计数法

## 字符串
单引号内部可以包含双引号，双引号内部可以包含单引号
如果想在单引号内部使用单引号（或者双引号内部使用双引号），则必须在单引号前面加上  \   （用来转义）
"\251"代表版权符号
"\xHH"也代表版权符号
"\u00A9A"也代表版权符号
